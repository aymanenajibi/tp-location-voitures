{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  transactions: [],\n  temporaire: [],\n  compteur: 0\n};\nconst gestionArgentSlice = createSlice({\n  name: \"gestionArgent\",\n  initialState,\n  reducers: {\n    ajouterTransaction: (state, action) => {\n      state.temporaire.push({\n        type: \"+\",\n        montant: action.payload,\n        compteur: state.compteur + action.payload\n      });\n      state.compteur += action.payload;\n    },\n    retirerTransaction: (state, action) => {\n      state.temporaire.push({\n        type: \"-\",\n        montant: action.payload,\n        compteur: state.compteur - action.payload\n      });\n      state.compteur -= action.payload;\n    },\n    enregistrerTransactions: state => {\n      state.transactions = [...state.transactions, ...state.temporaire];\n      state.temporaire = [];\n    }\n  }\n});\nexport const {\n  ajouterTransaction,\n  retirerTransaction,\n  enregistrerTransactions\n} = gestionArgentSlice.actions;\nexport default gestionArgentSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","transactions","temporaire","compteur","gestionArgentSlice","name","reducers","ajouterTransaction","state","action","push","type","montant","payload","retirerTransaction","enregistrerTransactions","actions","reducer"],"sources":["C:/Users/AymanNb/react/src/Les Fonctionalites/tp16 redux tolkit/redux/reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n  temporaire: [],\r\n  compteur: 0,\r\n};\r\n\r\nconst gestionArgentSlice = createSlice({\r\n  name: \"gestionArgent\",\r\n  initialState,\r\n  reducers: {\r\n    ajouterTransaction: (state, action) => {\r\n      state.temporaire.push({\r\n        type: \"+\",\r\n        montant: action.payload,\r\n        compteur: state.compteur + action.payload,\r\n      });\r\n      state.compteur += action.payload;\r\n    },\r\n    retirerTransaction: (state, action) => {\r\n      state.temporaire.push({\r\n        type: \"-\",\r\n        montant: action.payload,\r\n        compteur: state.compteur - action.payload,\r\n      });\r\n      state.compteur -= action.payload;\r\n    },\r\n    enregistrerTransactions: (state) => {\r\n      state.transactions = [...state.transactions, ...state.temporaire];\r\n      state.temporaire = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  ajouterTransaction,\r\n  retirerTransaction,\r\n  enregistrerTransactions,\r\n} = gestionArgentSlice.actions;\r\n\r\nexport default gestionArgentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,kBAAkB,GAAGL,WAAW,CAAC;EACrCM,IAAI,EAAE,eAAe;EACrBL,YAAY;EACZM,QAAQ,EAAE;IACRC,kBAAkB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACN,UAAU,CAACQ,IAAI,CAAC;QACpBC,IAAI,EAAE,GAAG;QACTC,OAAO,EAAEH,MAAM,CAACI,OAAO;QACvBV,QAAQ,EAAEK,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACI;MACpC,CAAC,CAAC;MACFL,KAAK,CAACL,QAAQ,IAAIM,MAAM,CAACI,OAAO;IAClC,CAAC;IACDC,kBAAkB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACN,UAAU,CAACQ,IAAI,CAAC;QACpBC,IAAI,EAAE,GAAG;QACTC,OAAO,EAAEH,MAAM,CAACI,OAAO;QACvBV,QAAQ,EAAEK,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACI;MACpC,CAAC,CAAC;MACFL,KAAK,CAACL,QAAQ,IAAIM,MAAM,CAACI,OAAO;IAClC,CAAC;IACDE,uBAAuB,EAAGP,KAAK,IAAK;MAClCA,KAAK,CAACP,YAAY,GAAG,CAAC,GAAGO,KAAK,CAACP,YAAY,EAAE,GAAGO,KAAK,CAACN,UAAU,CAAC;MACjEM,KAAK,CAACN,UAAU,GAAG,EAAE;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXK,kBAAkB;EAClBO,kBAAkB;EAClBC;AACF,CAAC,GAAGX,kBAAkB,CAACY,OAAO;AAE9B,eAAeZ,kBAAkB,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}