{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AymanNb\\\\react\\\\src\\\\Les Classes\\\\tp2\\\\compteur.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MonComposant extends Component {\n  // Variable statique pour stocker le nombre total de clics\n  constructor(props) {\n    super(props);\n    this.ajouterMessage = nouveauMessage => {\n      this.setState(prevState => ({\n        messages: [...prevState.messages, nouveauMessage]\n      }));\n    };\n    this.changerCompteur = valeur => {\n      MonComposant.nombreTotalClick += 1; // Incrémente la variable statique pour tous les click\n      this.setState(prevState => ({\n        compteur: prevState.compteur + valeur,\n        nombreClick: prevState.nombreClick + 1\n      }));\n    };\n    this.reinitialiserMessage = () => {\n      this.setState({\n        messages: []\n      });\n    };\n    this.reinirialiserCouter = () => {\n      this.setState({\n        compteur: 0,\n        nombreClick: 0\n      });\n    };\n    this.handleNomChange = event => {\n      const nouveauNom = event.target.value;\n      this.setState({\n        nom: nouveauNom,\n        compteur: 0,\n        //Réinitialise le compteur\n        nombreClick: 0 //Réinitialise le nombre de click\n      });\n    };\n    this.state = {\n      compteur: 0,\n      messages: [],\n      // Pour le stockage des messages\n      nom: \"\",\n      nombreClick: 0 //Pour stocker le nombre total de click\n    };\n  }\n  componentDidMount() {\n    this.ajouterMessage(\"Le composant est monté !\");\n  }\n\n  //*                _ = prevProps\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.compteur !== this.state.compteur) {\n      this.ajouterMessage(`Le compteur a été mis à jour : ${this.state.compteur}`);\n    }\n  }\n  componentWillUnmount() {\n    this.ajouterMessage(\"Le composant va être démonté.\");\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nom d'utilisateur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleNomChange,\n        value: this.state.nom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Compteur : \", this.state.compteur]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.changerCompteur(1),\n        children: \"Increment (+1)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.changerCompteur(-1),\n        children: \"Decrement (-1)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages de cycle de vie :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.reinitialiserMessage,\n        children: \"Reinitialiser les messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.reinirialiserCouter,\n        children: \"Reinitialiser les Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"bravo, \", this.state.nom, \" Vous avez clique \", this.state.nombreClick, \" fois .\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Nombre Total de Click : \", MonComposant.nombreTotalClick, \" fois\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n}\nMonComposant.nombreTotalClick = 0;\nexport default MonComposant;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","MonComposant","constructor","props","ajouterMessage","nouveauMessage","setState","prevState","messages","changerCompteur","valeur","nombreTotalClick","compteur","nombreClick","reinitialiserMessage","reinirialiserCouter","handleNomChange","event","nouveauNom","target","value","nom","state","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","message","index"],"sources":["C:/Users/AymanNb/react/src/Les Classes/tp2/compteur.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass MonComposant extends Component {\r\n  static nombreTotalClick = 0; // Variable statique pour stocker le nombre total de clics\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      compteur: 0,\r\n      messages: [], // Pour le stockage des messages\r\n      nom: \"\",\r\n      nombreClick: 0, //Pour stocker le nombre total de click\r\n    };\r\n  }\r\n\r\n  ajouterMessage = (nouveauMessage) => {\r\n    this.setState((prevState) => ({\r\n      messages: [...prevState.messages, nouveauMessage],\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.ajouterMessage(\"Le composant est monté !\");\r\n  }\r\n\r\n  //*                _ = prevProps\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.compteur !== this.state.compteur) {\r\n      this.ajouterMessage(\r\n        `Le compteur a été mis à jour : ${this.state.compteur}`\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.ajouterMessage(\"Le composant va être démonté.\");\r\n  }\r\n\r\n  changerCompteur = (valeur) => {\r\n    MonComposant.nombreTotalClick += 1; // Incrémente la variable statique pour tous les click\r\n    this.setState((prevState) => ({\r\n      compteur: prevState.compteur + valeur,\r\n      nombreClick: prevState.nombreClick + 1,\r\n    }));\r\n  };\r\n\r\n  reinitialiserMessage = () => {\r\n    this.setState({ messages: [] });\r\n  };\r\n\r\n  reinirialiserCouter = () => {\r\n    this.setState({ compteur: 0, nombreClick: 0 });\r\n  };\r\n\r\n  handleNomChange = (event) => {\r\n    const nouveauNom = event.target.value;\r\n    this.setState({\r\n      nom: nouveauNom,\r\n      compteur: 0, //Réinitialise le compteur\r\n      nombreClick: 0, //Réinitialise le nombre de click\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Nom d'utilisateur</h1>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.handleNomChange}\r\n          value={this.state.nom}\r\n        />\r\n        <h1>Compteur : {this.state.compteur}</h1>\r\n        <button onClick={() => this.changerCompteur(1)}>Increment (+1)</button>\r\n        <button onClick={() => this.changerCompteur(-1)}>Decrement (-1)</button>\r\n\r\n        <h2>Messages de cycle de vie :</h2>\r\n        <ul>\r\n          {this.state.messages.map((message, index) => (\r\n            <li key={index}>{message}</li>\r\n          ))}\r\n        </ul>\r\n        <button onClick={this.reinitialiserMessage}>\r\n          Reinitialiser les messages\r\n        </button>\r\n        <button onClick={this.reinirialiserCouter}>\r\n          Reinitialiser les Counter\r\n        </button>\r\n\r\n        <h1>\r\n          bravo, {this.state.nom} Vous avez clique {this.state.nombreClick} fois\r\n          .\r\n        </h1>\r\n\r\n        <h4>Nombre Total de Click : {MonComposant.nombreTotalClick} fois</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MonComposant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}