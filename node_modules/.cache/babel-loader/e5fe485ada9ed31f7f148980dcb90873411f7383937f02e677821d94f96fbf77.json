{"ast":null,"code":"import { type } from \"@testing-library/user-event/dist/cjs/utility/type.js\";\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const RESET = \"RESET\";\nexport const SET_VALUE = \"SET_VALUE\"; // Action pour définir une valeur spécifique\n\nconst initialState = {\n  value: 0\n};\n\n// Actions \nexport function increment(payload) {\n  return {\n    type: INCREMENT,\n    payload\n  }; // Passer un payload à l'action\n}\nexport function decremente(payload) {\n  return {\n    type: DECREMENT,\n    payload\n  }; // Passer un payload à l'action\n}\nexport function reset(payload) {\n  return {\n    type: RESET,\n    payload\n  }; // Passer un payload à l'action\n}\nexport function setValue(payload) {\n  return;\n}\n\n//Reducer\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        ...state,\n        value: state.value + action\n      };\n    case DECREMENT:\n      return {\n        ...state,\n        value: state.value - 1\n      };\n    case RESET:\n      return {\n        ...state,\n        value: 0\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["type","INCREMENT","DECREMENT","RESET","SET_VALUE","initialState","value","increment","payload","decremente","reset","setValue","reducer","state","action"],"sources":["C:/Users/AymanNb/react/src/Les Fonctionalites/tp14-redux/reducers.js"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/cjs/utility/type.js\";\r\n\r\nexport const INCREMENT = \"INCREMENT\";\r\nexport const DECREMENT = \"DECREMENT\";\r\nexport const RESET = \"RESET\";\r\nexport const SET_VALUE = \"SET_VALUE\"; // Action pour définir une valeur spécifique\r\n\r\nconst initialState = {\r\n  value: 0\r\n};\r\n\r\n// Actions \r\nexport function increment(payload) {\r\n    return { type: INCREMENT, payload};// Passer un payload à l'action\r\n}\r\nexport function decremente(payload) {\r\n    return { type: DECREMENT, payload };// Passer un payload à l'action\r\n}\r\nexport function reset(payload) {\r\n    return { type: RESET ,payload};// Passer un payload à l'action\r\n}\r\nexport function setValue(payload) {\r\n    return \r\n}\r\n\r\n\r\n//Reducer\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case INCREMENT:\r\n            return { ...state, value: state.value + (action) }\r\n        case DECREMENT:\r\n            return { ...state, value: state.value - 1 }\r\n        case RESET:\r\n            return { ...state, value: 0 }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,sDAAsD;AAE3E,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,KAAK,GAAG,OAAO;AAC5B,OAAO,MAAMC,SAAS,GAAG,WAAW,CAAC,CAAC;;AAEtC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,SAASC,SAASA,CAACC,OAAO,EAAE;EAC/B,OAAO;IAAER,IAAI,EAAEC,SAAS;IAAEO;EAAO,CAAC,CAAC;AACvC;AACA,OAAO,SAASC,UAAUA,CAACD,OAAO,EAAE;EAChC,OAAO;IAAER,IAAI,EAAEE,SAAS;IAAEM;EAAQ,CAAC,CAAC;AACxC;AACA,OAAO,SAASE,KAAKA,CAACF,OAAO,EAAE;EAC3B,OAAO;IAAER,IAAI,EAAEG,KAAK;IAAEK;EAAO,CAAC,CAAC;AACnC;AACA,OAAO,SAASG,QAAQA,CAACH,OAAO,EAAE;EAC9B;AACJ;;AAGA;AACA,eAAe,SAASI,OAAOA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,EAAE;EAC1D,QAAQA,MAAM,CAACd,IAAI;IACf,KAAKC,SAAS;MACV,OAAO;QAAE,GAAGY,KAAK;QAAEP,KAAK,EAAEO,KAAK,CAACP,KAAK,GAAIQ;MAAQ,CAAC;IACtD,KAAKZ,SAAS;MACV,OAAO;QAAE,GAAGW,KAAK;QAAEP,KAAK,EAAEO,KAAK,CAACP,KAAK,GAAG;MAAE,CAAC;IAC/C,KAAKH,KAAK;MACN,OAAO;QAAE,GAAGU,KAAK;QAAEP,KAAK,EAAE;MAAE,CAAC;IACjC;MACI,OAAOO,KAAK;EACpB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}