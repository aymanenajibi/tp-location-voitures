{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AymanNb\\\\react\\\\src\\\\Regional\\\\efm-fes-meknes\\\\components\\\\ListeVoitures.jsx\",\n  _s = $RefreshSig$();\n//TODO ---  Composant qui initialise le state a partie de l'api --- \n\n/* \r\n    * ✅ useState → Permet de gérer l’état des voitures.\r\n    * ✅ useEffect → Exécute du code quand le composant est monté (pour récupérer les voitures depuis l'API).\r\n    * ✅ Voiture → Composant qui affiche une voiture sous forme de ligne dans un tableau.\r\n    * ✅ AjouterVoiture → Composant pour ajouter une voiture.\r\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport Voiture from \"./Voiture\";\nimport AjouterVoiture from \"./AjouterVoiture\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListeVoitures() {\n  _s();\n  const [voitures, setVoitures] = useState([]);\n\n  /* \r\n     * ✅ fetch(\"http://localhost:5000/voitures\") → Envoie une requête HTTP pour récupérer la liste des voitures.\r\n     * ✅ response.json() → Convertit la réponse de l’API en format JSON.\r\n     * ✅ setVoitures(data.voitures) → Met à jour l’état voitures avec les données reçues. \r\n  */\n  useEffect(() => {\n    fetch(\"http://localhost:5000/voitures\").then(response => response.json()).then(data => setVoitures(data.voitures)).catch(error => console.error(\"Erreur lors du chargement des voitures :\", error));\n  }, []);\n\n  /* \r\n      * ✅ window.confirm(...) → Affiche une boîte de confirmation avant la suppression.\r\n      * ✅ .filter(...) → Crée une nouvelle liste sans la voiture sélectionnée.\r\n  */\n  const handleDelete = id => {\n    if (window.confirm(\"Voulez-vous vraiment supprimer cete voiture ? \")) {\n      setVoitures(voitures.filter(voiture => voiture.id !== id));\n    }\n  };\n\n  /*   \r\n      * ✅ handleAjout(nouvelleVoiture) → Ajoute une nouvelle voiture à la liste.\r\n      * ✅ [...voitures, nouvelleVoiture] → Copie les anciennes voitures et ajoute la nouvelle à la fin.\r\n  */\n  const handleAjoute = nouvelleVoiture => {\n    setVoitures([...voitures, nouvelleVoiture]);\n  };\n  const handleModifier = voitureModifier => {\n    setVoitures(voitures.map(voiture => voiture.id === voitureModifier.id ? voitureModifier : voiture));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AjouterVoiture, {\n      onAjout: handleAjoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des voitures\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Marque\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type Carburant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prix de location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Operation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [voitures.map(voiture => /*#__PURE__*/_jsxDEV(Voiture, {\n          voituree: voiture,\n          supprimer: handleDelete,\n          modifier: hand\n        }, voiture.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(ListeVoitures, \"UyMagouVxP3Xt5K+Dl2Sy3RYrXE=\");\n_c = ListeVoitures;\n;\nvar _c;\n$RefreshReg$(_c, \"ListeVoitures\");","map":{"version":3,"names":["React","useState","useEffect","Voiture","AjouterVoiture","jsxDEV","_jsxDEV","ListeVoitures","_s","voitures","setVoitures","fetch","then","response","json","data","catch","error","console","handleDelete","id","window","confirm","filter","voiture","handleAjoute","nouvelleVoiture","handleModifier","voitureModifier","map","children","onAjout","fileName","_jsxFileName","lineNumber","columnNumber","border","voituree","supprimer","modifier","hand","_c","$RefreshReg$"],"sources":["C:/Users/AymanNb/react/src/Regional/efm-fes-meknes/components/ListeVoitures.jsx"],"sourcesContent":["//TODO ---  Composant qui initialise le state a partie de l'api --- \r\n\r\n    /* \r\n        * ✅ useState → Permet de gérer l’état des voitures.\r\n        * ✅ useEffect → Exécute du code quand le composant est monté (pour récupérer les voitures depuis l'API).\r\n        * ✅ Voiture → Composant qui affiche une voiture sous forme de ligne dans un tableau.\r\n        * ✅ AjouterVoiture → Composant pour ajouter une voiture.\r\n    */\r\n\r\nimport React, { useState , useEffect } from \"react\";\r\nimport Voiture from \"./Voiture\";\r\nimport AjouterVoiture from \"./AjouterVoiture\";\r\n\r\n\r\n\r\n\r\nexport default function ListeVoitures() { \r\n    const [voitures, setVoitures] = useState([]);\r\n    \r\n    \r\n    /* \r\n       * ✅ fetch(\"http://localhost:5000/voitures\") → Envoie une requête HTTP pour récupérer la liste des voitures.\r\n       * ✅ response.json() → Convertit la réponse de l’API en format JSON.\r\n       * ✅ setVoitures(data.voitures) → Met à jour l’état voitures avec les données reçues. \r\n    */\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/voitures\")\r\n            .then(response => response.json())\r\n            .then(data => setVoitures(data.voitures))\r\n            .catch(error => console.error(\"Erreur lors du chargement des voitures :\", error));\r\n    }, []); \r\n    \r\n\r\n    /* \r\n        * ✅ window.confirm(...) → Affiche une boîte de confirmation avant la suppression.\r\n        * ✅ .filter(...) → Crée une nouvelle liste sans la voiture sélectionnée.\r\n    */\r\n    const handleDelete = (id) => {\r\n        if (window.confirm(\"Voulez-vous vraiment supprimer cete voiture ? \")) {\r\n            setVoitures(voitures.filter(voiture => voiture.id !== id));\r\n        }\r\n    };\r\n    \r\n\r\n    /*   \r\n        * ✅ handleAjout(nouvelleVoiture) → Ajoute une nouvelle voiture à la liste.\r\n        * ✅ [...voitures, nouvelleVoiture] → Copie les anciennes voitures et ajoute la nouvelle à la fin.\r\n    */\r\n    const handleAjoute = (nouvelleVoiture) => {\r\n        setVoitures([...voitures, nouvelleVoiture]);\r\n    };\r\n\r\n\r\n    const handleModifier = (voitureModifier) => {\r\n        setVoitures(voitures.map((voiture) => ( voiture.id === voitureModifier.id\r\n            ? voitureModifier\r\n            : voiture  )));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AjouterVoiture onAjout={handleAjoute} />\r\n            <h2>Liste des voitures</h2>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Marque</th>\r\n                        <th>Type Carburant</th>\r\n                        <th>Prix de location</th>\r\n                        <th>Image</th>\r\n                        <th>Operation</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {voitures.map((voiture) => (\r\n                        <Voiture voituree={voiture} key={voiture.id} supprimer={handleDelete} modifier={hand} />\r\n                    ))};\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}