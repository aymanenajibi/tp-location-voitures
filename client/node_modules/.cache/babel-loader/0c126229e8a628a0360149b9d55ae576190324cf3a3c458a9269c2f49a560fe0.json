{"ast":null,"code":"import { AJOUTER, RETIRER, ENREGISTRER } from \"./types\";\nconst initialState = {\n  transactions: [],\n  compteur: 0,\n  transactionsEnregistrees: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AJOUTER:\n      return {\n        ...state,\n        transactions: [...state.transactions, {\n          type: \"+\",\n          montant: action.payload,\n          compteur: state.compteur + action.payload\n        }],\n        compteur: state.compteur + action.payload\n      };\n    case RETIRER:\n      return {\n        ...state,\n        transactions: [...state.transactions, {\n          type: \"-\",\n          montant: action.payload,\n          compteur: state.compteur - action.payload\n        }],\n        compteur: state.compteur - action.payload\n      };\n    case ENREGISTRER:\n      return {\n        ...state,\n        transactionsEnregistrees: [...state.transactionsEnregistrees, ...state.transactions]\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["AJOUTER","RETIRER","ENREGISTRER","initialState","transactions","compteur","transactionsEnregistrees","reducer","state","action","type","montant","payload"],"sources":["C:/Users/AymanNb/react/src/Les Fonctionalites/tp16 redux/redux/reducer.js"],"sourcesContent":["import { AJOUTER, RETIRER, ENREGISTRER } from \"./types\";\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n  compteur: 0,\r\n  transactionsEnregistrees: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AJOUTER:\r\n      return {\r\n        ...state,\r\n        transactions: [\r\n          ...state.transactions,\r\n          {\r\n            type: \"+\",\r\n            montant: action.payload,\r\n            compteur: state.compteur + action.payload,\r\n          },\r\n        ],\r\n        compteur: state.compteur + action.payload,\r\n      };\r\n    case RETIRER:\r\n      return {\r\n        ...state,\r\n        transactions: [\r\n          ...state.transactions,\r\n          {\r\n            type: \"-\",\r\n            montant: action.payload,\r\n            compteur: state.compteur - action.payload,\r\n          },\r\n        ],\r\n        compteur: state.compteur - action.payload,\r\n      };\r\n    case ENREGISTRER:\r\n      return {\r\n        ...state,\r\n        transactionsEnregistrees: [...state.transactionsEnregistrees, ...state.transactions],\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,WAAW,QAAQ,SAAS;AAEvD,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC;EACXC,wBAAwB,EAAE;AAC5B,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,OAAO;MACV,OAAO;QACL,GAAGQ,KAAK;QACRJ,YAAY,EAAE,CACZ,GAAGI,KAAK,CAACJ,YAAY,EACrB;UACEM,IAAI,EAAE,GAAG;UACTC,OAAO,EAAEF,MAAM,CAACG,OAAO;UACvBP,QAAQ,EAAEG,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACG;QACpC,CAAC,CACF;QACDP,QAAQ,EAAEG,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACG;MACpC,CAAC;IACH,KAAKX,OAAO;MACV,OAAO;QACL,GAAGO,KAAK;QACRJ,YAAY,EAAE,CACZ,GAAGI,KAAK,CAACJ,YAAY,EACrB;UACEM,IAAI,EAAE,GAAG;UACTC,OAAO,EAAEF,MAAM,CAACG,OAAO;UACvBP,QAAQ,EAAEG,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACG;QACpC,CAAC,CACF;QACDP,QAAQ,EAAEG,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACG;MACpC,CAAC;IACH,KAAKV,WAAW;MACd,OAAO;QACL,GAAGM,KAAK;QACRF,wBAAwB,EAAE,CAAC,GAAGE,KAAK,CAACF,wBAAwB,EAAE,GAAGE,KAAK,CAACJ,YAAY;MACrF,CAAC;IACH;MACE,OAAOI,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}