{"ast":null,"code":"import { AJOUTER, RETIRER, ENREGISTRER } from \"./types\";\nconst initialState = {\n  transactions: [],\n  // Transactions enregistrées\n  temporaire: [],\n  // Transactions temporaires\n  compteur: 0 // Solde actuel\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AJOUTER:\n      return {\n        ...state,\n        temporaire: [...state.temporaire, {\n          type: \"+\",\n          montant: action.payload,\n          compteur: state.compteur + action.payload\n        }],\n        compteur: state.compteur + action.payload\n      };\n    case RETIRER:\n      return {\n        ...state,\n        temporaire: [...state.temporaire, {\n          type: \"-\",\n          montant: action.payload,\n          compteur: state.compteur - action.payload\n        }],\n        compteur: state.compteur - action.payload\n      };\n    case ENREGISTRER:\n      return {\n        ...state,\n        transactions: [...state.transactions, ...state.temporaire],\n        temporaire: [] // Réinitialiser la liste temporaire\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["AJOUTER","RETIRER","ENREGISTRER","initialState","transactions","temporaire","compteur","reducer","state","action","type","montant","payload"],"sources":["C:/Users/AymanNb/react/src/Les Fonctionalites/tp16 redux/redux/reducer.js"],"sourcesContent":["import { AJOUTER, RETIRER, ENREGISTRER } from \"./types\";\r\n\r\nconst initialState = {\r\n  transactions: [], // Transactions enregistrées\r\n  temporaire: [],   // Transactions temporaires\r\n  compteur: 0,      // Solde actuel\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AJOUTER:\r\n      return {\r\n        ...state,\r\n        temporaire: [\r\n          ...state.temporaire,\r\n          {\r\n            type: \"+\",\r\n            montant: action.payload,\r\n            compteur: state.compteur + action.payload,\r\n          },\r\n        ],\r\n        compteur: state.compteur + action.payload,\r\n      };\r\n    case RETIRER:\r\n      return {\r\n        ...state,\r\n        temporaire: [\r\n          ...state.temporaire,\r\n          {\r\n            type: \"-\",\r\n            montant: action.payload,\r\n            compteur: state.compteur - action.payload,\r\n          },\r\n        ],\r\n        compteur: state.compteur - action.payload,\r\n      };\r\n    case ENREGISTRER:\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, ...state.temporaire],\r\n        temporaire: [], // Réinitialiser la liste temporaire\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,WAAW,QAAQ,SAAS;AAEvD,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EAAE;EAAE;EAClBC,UAAU,EAAE,EAAE;EAAI;EAClBC,QAAQ,EAAE,CAAC,CAAO;AACpB,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,OAAO;MACV,OAAO;QACL,GAAGQ,KAAK;QACRH,UAAU,EAAE,CACV,GAAGG,KAAK,CAACH,UAAU,EACnB;UACEK,IAAI,EAAE,GAAG;UACTC,OAAO,EAAEF,MAAM,CAACG,OAAO;UACvBN,QAAQ,EAAEE,KAAK,CAACF,QAAQ,GAAGG,MAAM,CAACG;QACpC,CAAC,CACF;QACDN,QAAQ,EAAEE,KAAK,CAACF,QAAQ,GAAGG,MAAM,CAACG;MACpC,CAAC;IACH,KAAKX,OAAO;MACV,OAAO;QACL,GAAGO,KAAK;QACRH,UAAU,EAAE,CACV,GAAGG,KAAK,CAACH,UAAU,EACnB;UACEK,IAAI,EAAE,GAAG;UACTC,OAAO,EAAEF,MAAM,CAACG,OAAO;UACvBN,QAAQ,EAAEE,KAAK,CAACF,QAAQ,GAAGG,MAAM,CAACG;QACpC,CAAC,CACF;QACDN,QAAQ,EAAEE,KAAK,CAACF,QAAQ,GAAGG,MAAM,CAACG;MACpC,CAAC;IACH,KAAKV,WAAW;MACd,OAAO;QACL,GAAGM,KAAK;QACRJ,YAAY,EAAE,CAAC,GAAGI,KAAK,CAACJ,YAAY,EAAE,GAAGI,KAAK,CAACH,UAAU,CAAC;QAC1DA,UAAU,EAAE,EAAE,CAAE;MAClB,CAAC;IACH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}