{"ast":null,"code":"import { AJOUTER, RETIRER, ENREGISTRER } from \"./types\";\nconst initialState = {\n  transactions: [],\n  transactionsTemp: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AJOUTER:\n      return {\n        ...state,\n        transactions: [...state.transactions, {\n          type: \"+\",\n          montant: action.payload,\n          compteur: state.compteur + action.payload\n        }],\n        compteur: state.compteur + action.payload\n      };\n    case RETIRER:\n      return {\n        ...state,\n        transactions: [...state.transactions, {\n          type: \"-\",\n          montant: action.payload,\n          compteur: state.compteur - action.payload\n        }],\n        compteur: state.compteur - action.payload\n      };\n    case ENREGISTRER:\n      return {\n        ...state,\n        transactions: [...state.transactions, ...state.transactionsTemp],\n        transactionsTemp: []\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["AJOUTER","RETIRER","ENREGISTRER","initialState","transactions","transactionsTemp","reducer","state","action","type","montant","payload","compteur"],"sources":["C:/Users/AymanNb/react/src/Les Fonctionalites/tp16 redux/redux/reducer.js"],"sourcesContent":["import { AJOUTER, RETIRER, ENREGISTRER } from \"./types\";\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n  transactionsTemp: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AJOUTER:\r\n      return {\r\n        ...state,\r\n        transactions: [\r\n          ...state.transactions,\r\n          {\r\n            type: \"+\",\r\n            montant: action.payload,\r\n            compteur: state.compteur + action.payload,\r\n          },\r\n        ],\r\n        compteur: state.compteur + action.payload,\r\n      };\r\n    case RETIRER:\r\n      return {\r\n        ...state,\r\n        transactions: [\r\n          ...state.transactions,\r\n          {\r\n            type: \"-\",\r\n            montant: action.payload,\r\n            compteur: state.compteur - action.payload,\r\n          },\r\n        ],\r\n        compteur: state.compteur - action.payload,\r\n      };\r\n    case ENREGISTRER:\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, ...state.transactionsTemp],\r\n        transactionsTemp: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,WAAW,QAAQ,SAAS;AAEvD,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EAAE;EAChBC,gBAAgB,EAAE;AACpB,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,OAAO;MACV,OAAO;QACL,GAAGO,KAAK;QACRH,YAAY,EAAE,CACZ,GAAGG,KAAK,CAACH,YAAY,EACrB;UACEK,IAAI,EAAE,GAAG;UACTC,OAAO,EAAEF,MAAM,CAACG,OAAO;UACvBC,QAAQ,EAAEL,KAAK,CAACK,QAAQ,GAAGJ,MAAM,CAACG;QACpC,CAAC,CACF;QACDC,QAAQ,EAAEL,KAAK,CAACK,QAAQ,GAAGJ,MAAM,CAACG;MACpC,CAAC;IACH,KAAKV,OAAO;MACV,OAAO;QACL,GAAGM,KAAK;QACRH,YAAY,EAAE,CACZ,GAAGG,KAAK,CAACH,YAAY,EACrB;UACEK,IAAI,EAAE,GAAG;UACTC,OAAO,EAAEF,MAAM,CAACG,OAAO;UACvBC,QAAQ,EAAEL,KAAK,CAACK,QAAQ,GAAGJ,MAAM,CAACG;QACpC,CAAC,CACF;QACDC,QAAQ,EAAEL,KAAK,CAACK,QAAQ,GAAGJ,MAAM,CAACG;MACpC,CAAC;IACH,KAAKT,WAAW;MACd,OAAO;QACL,GAAGK,KAAK;QACRH,YAAY,EAAE,CAAC,GAAGG,KAAK,CAACH,YAAY,EAAE,GAAGG,KAAK,CAACF,gBAAgB,CAAC;QAChEA,gBAAgB,EAAE;MACpB,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}